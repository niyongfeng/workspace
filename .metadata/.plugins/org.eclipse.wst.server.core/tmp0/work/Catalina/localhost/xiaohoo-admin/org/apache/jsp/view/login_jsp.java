/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M17
 * Generated at: 2017-05-24 01:54:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"utf-8\">\r\n");
      out.write("  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("  <title>xiaohoo后台管理</title>\r\n");
      out.write("  <!-- Tell the browser to be responsive to screen width -->\r\n");
      out.write("  <meta content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\" name=\"viewport\">\r\n");
      out.write("  <!-- Bootstrap 3.3.6 -->\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"/xiaohoo-admin/page/bootstrap/css/bootstrap.min.css\">\r\n");
      out.write("  <!-- Font Awesome -->\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"/xiaohoo-admin/page/plugins/font-awesome-4.6.3/css/font-awesome.min.css\">\r\n");
      out.write("  <!-- Ionicons -->\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"/xiaohoo-admin/page/plugins/ionicons-2.0.1/css/ionicons.min.css\">\r\n");
      out.write("  <!-- Theme style -->\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"/xiaohoo-admin/page/dist/css/AdminLTE.min.css\">\r\n");
      out.write("  <!-- iCheck -->\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"/xiaohoo-admin/page/plugins/iCheck/square/blue.css\">\r\n");
      out.write("\r\n");
      out.write("  <![endif]-->\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body class=\"hold-transition login-page\" style=\"background-color:#1f313a; background-image: url(/page/dist/img/wallpaper-screen.jpg);\" >\r\n");
      out.write("<div class=\"login-box\">\r\n");
      out.write("  <div class=\"login-logo\" style=\"color:#f1ecec;\">\r\n");
      out.write("    <b>校乎</b>后台管理\r\n");
      out.write("  </div>\r\n");
      out.write("  <!-- /.login-logo -->\r\n");
      out.write("  <div class=\"login-box-body\">\r\n");
      out.write("    <p class=\"login-box-msg\">请登录</p>\r\n");
      out.write("\r\n");
      out.write("    <form action=\"/woo-api/user/login\" method=\"post\">\r\n");
      out.write("      <div class=\"form-group has-feedback\">\r\n");
      out.write("        <input type=\"text\" id=\"username\" class=\"form-control\" value=\"123\" placeholder=\"用户名/手机号\">\r\n");
      out.write("        <span class=\"glyphicon glyphicon-user form-control-feedback\"></span>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"form-group has-feedback\">\r\n");
      out.write("        <input type=\"password\" id=\"password\" class=\"form-control\" value=\"1234561\" placeholder=\"密码\">\r\n");
      out.write("        <span class=\"glyphicon glyphicon-lock form-control-feedback\"></span>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"row\">\r\n");
      out.write("        <div class=\"col-xs-8\">\r\n");
      out.write("            <label id=\"login_msg\">\r\n");
      out.write("            </label>\r\n");
      out.write("        </div>\r\n");
      out.write("        <!-- /.col -->\r\n");
      out.write("        <div class=\"col-xs-4\">\r\n");
      out.write("          <button type=\"button\" id=\"loginbutton\" onclick='login();' class=\"btn btn-primary btn-block btn-flat\">登 录</button>\r\n");
      out.write("        </div>\r\n");
      out.write("        <!-- /.col -->\r\n");
      out.write("      </div>\r\n");
      out.write("    </form>\r\n");
      out.write("\r\n");
      out.write("  </div>\r\n");
      out.write("  <!-- /.login-box-body -->\r\n");
      out.write("</div>\r\n");
      out.write("<!-- /.login-box -->\r\n");
      out.write("\r\n");
      out.write("<!-- jQuery 2.2.3 -->\r\n");
      out.write("<script src=\"/xiaohoo-admin/page/plugins/jQuery/jquery-2.2.3.min.js\"></script>\r\n");
      out.write("<!-- Bootstrap 3.3.6 -->\r\n");
      out.write("<script src=\"/xiaohoo-admin/page/bootstrap/js/bootstrap.min.js\"></script>\r\n");
      out.write("<!-- iCheck -->\r\n");
      out.write("<script src=\"/xiaohoo-admin/page/plugins/iCheck/icheck.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("  $(function () {\r\n");
      out.write("    $('input').iCheck({\r\n");
      out.write("      checkboxClass: 'icheckbox_square-blue',\r\n");
      out.write("      radioClass: 'iradio_square-blue',\r\n");
      out.write("      increaseArea: '20%' // optional\r\n");
      out.write("    });\r\n");
      out.write("    \r\n");
      out.write("     $(\"body\").keydown(function() {\r\n");
      out.write("         if (event.keyCode == \"13\") {//keyCode=13是回车键\r\n");
      out.write("         \tlogin();\r\n");
      out.write("         }\r\n");
      out.write("     });\r\n");
      out.write("    \r\n");
      out.write("  });\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("function login() {\r\n");
      out.write("\tvar username = $('#username').val();\r\n");
      out.write("\tvar password = $('#password').val();\r\n");
      out.write("\t\r\n");
      out.write("\tvar data=\"{\\\"userName\\\":\\\"\"+username+\"\\\",\\\"password\\\":\\\"\"+password+\"\\\"}\";\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t    url: '/xiaohoo-api/rest/v1/administrator/login',\r\n");
      out.write("\t    type: 'POST',\r\n");
      out.write("\t    data: \"para=\"+data,\r\n");
      out.write("\t    async: true,\r\n");
      out.write("\t    cache: false,\r\n");
      out.write("\t    contentType: 'application/x-www-form-urlencoded',\r\n");
      out.write("\t    processData: false,  \r\n");
      out.write("\t    beforeSend: function(XMLHttpRequest){\r\n");
      out.write("\t    \t$('#login_msg').text(\"登录中......\");\r\n");
      out.write("     \t},\r\n");
      out.write("\t    success: function (responseStr) {\r\n");
      out.write("\t    \tif(responseStr.res==0) {\r\n");
      out.write("\t    \t\t$('#login_msg').text(\"登录成功!\");\r\n");
      out.write("\t    \t\tvar user = responseStr.data.record.userName;\r\n");
      out.write("\t    \t\tvar userId = responseStr.data.record.uid;\r\n");
      out.write("\t    \t\tvar permission = responseStr.data.record.permission;\r\n");
      out.write("\t    \t\tuser = encodeURI(user);\r\n");
      out.write("\t    \t\tuserId = encodeURI(userId);\r\n");
      out.write("\t    \t\tvar url=\"/xiaohoo-admin/view/session.jsp?user=\" + user + \"&userId=\" + userId + \"&permission=\" + permission;\r\n");
      out.write("\t    \t\tlocation.href = url;\r\n");
      out.write("\t    \t}else{\r\n");
      out.write("\t    \t\t$('#login_msg').text(responseStr.message);\r\n");
      out.write("\t    \t}\r\n");
      out.write("\t    \t\r\n");
      out.write("\t    },  \r\n");
      out.write("\t    error: function (responseStr) {\r\n");
      out.write("\t   \t alert(\"error:\" + JSON.stringify(responseStr));\r\n");
      out.write("\t    }\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
