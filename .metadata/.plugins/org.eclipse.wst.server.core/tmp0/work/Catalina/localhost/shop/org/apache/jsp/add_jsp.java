/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M17
 * Generated at: 2017-05-12 07:28:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import com.nyf.pojo.*;

public final class add_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("com.nyf.pojo");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');

	List list = (List) request.getAttribute("list");

      out.write('\n');

	List list1 = (List) request.getSession().getAttribute("list1");

      out.write('\n');

	List list3 = (List) request.getAttribute("product");
	Product product = new Product();
	if(list3.size() != 0) {
		product = (Product)list3.get(0);
	}

      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("<!-- <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("    上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！\n");
      out.write("    <meta name=\"description\" content=\"\">\n");
      out.write("    <meta name=\"author\" content=\"\">\n");
      out.write("    <link rel=\"icon\" href=\"../../favicon.ico\"> -->\n");
      out.write("\n");
      out.write("<title>轻课商城</title>\n");
      out.write("\n");
      out.write("<!-- Bootstrap core CSS -->\n");
      out.write("<link\n");
      out.write("\thref=\"https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css\"\n");
      out.write("\trel=\"stylesheet\">\n");
      out.write("\n");
      out.write("<!-- IE10 viewport hack for Surface/desktop Windows 8 bug -->\n");
      out.write("<link href=\"../../assets/css/ie10-viewport-bug-workaround.css\"\n");
      out.write("\trel=\"stylesheet\">\n");
      out.write("\n");
      out.write("<!-- Custom styles for this template -->\n");
      out.write("<link href=\"navbar.css\" rel=\"stylesheet\">\n");
      out.write("\n");
      out.write("<!-- Just for debugging purposes. Don't actually copy these 2 lines! -->\n");
      out.write("<!--[if lt IE 9]><script src=\"../../assets/js/ie8-responsive-file-warning.js\"></script><![endif]-->\n");
      out.write("<script src=\"../../assets/js/ie-emulation-modes-warning.js\"></script>\n");
      out.write("\n");
      out.write("<!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->\n");
      out.write("<!--[if lt IE 9]>\n");
      out.write("      <script src=\"https://cdn.bootcss.com/html5shiv/3.7.3/html5shiv.min.js\"></script>\n");
      out.write("      <script src=\"https://cdn.bootcss.com/respond.js/1.4.2/respond.min.js\"></script>\n");
      out.write("    <![endif]-->\n");
      out.write("<style type=\"text/css\">\n");
      out.write("html, body {\n");
      out.write("\tpadding: 0;\n");
      out.write("\tmargin: 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".d1 {\n");
      out.write("\twidth: 600px;\n");
      out.write("\theight: 80px;\n");
      out.write("\ttext-align: center;\n");
      out.write("\tline-height: 40px;\n");
      out.write("\tmargin: 0 auto;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("\t<h2 style=\"text-align: center\">添加商品</h2>\n");
      out.write("\t<form action=\"AddServlet\" method=\"post\">\n");
      out.write("\t");
if(product != null) {
      out.write("\n");
      out.write("\t<input name =\"type\" type=\"hidden\" value = \"");
      out.print(product.getId());
      out.write("\"/>\n");
      out.write("\t");
}
      out.write("\n");
      out.write("\t<div class=\"d1\">\n");
      out.write("\t\t<div class=\"input-group input-group-lg\">\n");
      out.write("\t\t\t<span class=\"input-group-addon\">商品名&nbsp;&nbsp;&nbsp;</span>\n");
      out.write("\t\t\t<input  name=\"title\" type=\"text\" class=\"form-control\" placeholder=\"输入商品名\"\n");
      out.write("\t\t\t\taria-describedby=\"sizing-addon1\" style=\"width: 500px\" value=\"");
      out.print(product.getTitle());
      out.write("\">\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\t<div class=\"d1\">\n");
      out.write("\t\t<div class=\"input-group input-group-lg\">\n");
      out.write("\t\t\t<span class=\"input-group-addon\">商品编号</span> <input name=\"code\"\n");
      out.write("\t\t\t\ttype=\"text\" class=\"form-control\" placeholder=\"输入商品编号\"\n");
      out.write("\t\t\t\taria-describedby=\"sizing-addon1\" style=\"width: 500px\" value=\"");
      out.print(product.getCode());
      out.write("\">\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\t<div class=\"d1\">\n");
      out.write("\t\t<div class=\"input-group input-group-lg\">\n");
      out.write("\t\t\t<span class=\"input-group-addon\">商品描述</span> <input name=\"description\"\n");
      out.write("\t\t\t\ttype=\"text\" row=\"5\" class=\"form-control\" placeholder=\"输入商品描述\"\n");
      out.write("\t\t\t\taria-describedby=\"sizing-addon1\" style=\"width: 500px\" value=\"");
      out.print(product.getDescription());
      out.write("\">\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\t<div class=\"d1\">\n");
      out.write("\t\t<div class=\"input-group input-group-lg\">\n");
      out.write("\t\t\t<span class=\"input-group-addon\">商品分类</span><select\n");
      out.write("\t\t\t\tname=\"tag_id\" class=\"form-control input-sm\"\n");
      out.write("\t\t\t\tstyle=\"width: 500px\" value=\"");
      out.print(product.getTag_id());
      out.write("\">\n");
      out.write("\t\t\t\t");

					for (Object ob : list1) {
						Tag tag = (Tag) ob;
				
      out.write("\n");
      out.write("\t\t\t\t");
if(product.getTag_id() == tag.getId()) {
      out.write("\n");
      out.write("\t\t\t\t<option value=\"");
      out.print(tag.getId());
      out.write("\" selected=\"selected\">");
      out.print(tag.getName());
      out.write("</option>\n");
      out.write("\t\t\t\t");
}else { 
      out.write("\n");
      out.write("\t\t\t\t<option value=\"");
      out.print(tag.getId());
      out.write('"');
      out.write('>');
      out.print(tag.getName());
      out.write("</option>\n");
      out.write("\t\t\t\t");

				}}
				
      out.write("\n");
      out.write("\t\t\t</select>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\t<div class=\"d1\">\n");
      out.write("\t\t<div class=\"input-group input-group-lg\">\n");
      out.write("\t\t\t<span class=\"input-group-addon\">商品价格</span> <input name=\"price\"\n");
      out.write("\t\t\t\ttype=\"number\" class=\"form-control\" placeholder=\"输入商品价格\"\n");
      out.write("\t\t\t\taria-describedby=\"sizing-addon1\" style=\"width: 500px\" step=\"0.01\" value=\"");
      out.print(product.getPrice());
      out.write("\">\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\t<div class=\"d1\">\n");
      out.write("\t\t<div class=\"input-group input-group-lg\">\n");
      out.write("\t\t\t<span class=\"input-group-addon\">商品库存</span> <input name=\"number\"\n");
      out.write("\t\t\t\ttype=\"number\" class=\"form-control\" placeholder=\"输入商品库存\"\n");
      out.write("\t\t\t\taria-describedby=\"sizing-addon1\" style=\"width: 500px\" step=\"0.01\" value=\"");
      out.print(product.getNumber());
      out.write("\">\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\t<div class=\"d1\">\n");
      out.write("\t\t<div class=\"input-group input-group-lg\">\n");
      out.write("\t\t\t<span class=\"input-group-addon\">图片地址</span> <input name=\"picture\" \n");
      out.write("\t\t\t\ttype=\"text\" class=\"form-control\" placeholder=\"输入商品地址url\"\n");
      out.write("\t\t\t\taria-describedby=\"sizing-addon1\" style=\"width: 500px\" value=\"");
      out.print(product.getPicture());
      out.write("\">\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\n");
      out.write("\t<div class=\"d1\">\n");
      out.write("\t\t\n");
      out.write("\t\t\t<button class=\"btn btn-primary\" type=\"submit\"\n");
      out.write("\t\t\t\tstyle=\"width: 100px; height: 45px; font-size: 20px\">提交</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n");
      out.write("\t\t\t\t<a href=\"product\">\n");
      out.write("\t\t\t\t<button class=\"btn btn-primary\" type=\"button\"\n");
      out.write("\t\t\t\tstyle=\"width: 100px; height: 45px; font-size: 20px\">返回</button></a>\n");
      out.write("\t\t\n");
      out.write("\t</div>\n");
      out.write("\t</form>\n");
      out.write("\t<!-- /container -->\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\t<!-- Bootstrap core JavaScript\n");
      out.write("    ================================================== -->\n");
      out.write("\t<!-- Placed at the end of the document so the pages load faster -->\n");
      out.write("\t<script src=\"https://cdn.bootcss.com/jquery/1.12.4/jquery.min.js\"></script>\n");
      out.write("\t<script\n");
      out.write("\t\tsrc=\"https://cdn.bootcss.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n");
      out.write("\t<!-- IE10 viewport hack for Surface/desktop Windows 8 bug -->\n");
      out.write("\t<script src=\"../../assets/js/ie10-viewport-bug-workaround.js\"></script>\n");
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
