/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M17
 * Generated at: 2017-05-15 09:11:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import mall.demo.mybatis.pojo.Product;
import mall.demo.util.RequestKeyEnum;
import mall.demo.mybatis.service.ProductService;
import java.util.List;
import java.util.ArrayList;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("mall.demo.util.RequestKeyEnum");
    _jspx_imports_classes.add("mall.demo.mybatis.pojo.Product");
    _jspx_imports_classes.add("mall.demo.mybatis.service.ProductService");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html >\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("<title>首页</title>\n");
      out.write("<link href=\"");
      out.print(request.getContextPath() );
      out.write("/css/bootstrap.css\" rel=\"stylesheet\">\n");
      out.write("\n");
      out.write("<script src=\"");
      out.print(request.getContextPath() );
      out.write("/js/jquery.js?_=201703042022\"></script>\n");
      out.write("<script src=\"");
      out.print(request.getContextPath() );
      out.write("/js/bootstrap.js\"></script>\n");
      out.write("<script src=\"");
      out.print(request.getContextPath() );
      out.write("/js/index.js?_=20170503\"></script>\n");
      out.write("<script>\n");
      out.write("var webContextPath = \"");
      out.print(request.getContextPath() );
      out.write("\";\n");
      out.write("</script>\n");
      out.write("</head>\n");

//先在request里取，如果没有，就先全部读取一把
List<Product> products = null;
products = (List<Product>)request.getAttribute(RequestKeyEnum.productList.name());
if (products == null ) {
	products = (new ProductService()).getAllProducts();
}

String searchKey = null;
searchKey = (String)request.getAttribute(RequestKeyEnum.searchKey.name());
if(searchKey == null) {
	searchKey = "";
}

      out.write("\n");
      out.write("<body>\n");
      out.write("<div class=\"container\">\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "top.jsp", out, false);
      out.write("\n");
      out.write("<!-- first div move down -->\n");
      out.write("<p style=\"height:50px;\">&nbsp;</p>\n");
      out.write("<form class=\"form-inline\" action=\"");
      out.print(request.getContextPath() );
      out.write("/servlet/ProductSearchServlet\">\n");
      out.write("  <div class=\"form-group\">\n");
      out.write("    \n");
      out.write("    <input type=\"text\" name=\"searchKey\" class=\"form-control\" \n");
      out.write("    \t\tid=\"searchKey\" placeholder=\"搜搜看\" value=\"");
      out.print(searchKey );
      out.write("\">\n");
      out.write("  </div>\n");
      out.write("  \n");
      out.write("  <button type=\"submit\" class=\"btn btn-default\">搜一下</button>\n");
      out.write("</form>\n");
      out.write("<div class=\"row\">\n");
      out.write(" \t");
 for (Product product : products) { 
      out.write("\n");
      out.write(" \t<div class=\"col-md-4\">\n");
      out.write(" \t\t<h2>");
      out.print(product.getCode() );
      out.write(' ');
      out.write('-');
      out.write(' ');
      out.print(product.getName() );
      out.write("</h2>\n");
      out.write(" \t\t<p>");
      out.print(product.getDescription() );
      out.write("</p>\n");
      out.write(" \t\t<p>");
      out.print(product.getPrice() );
      out.write("</p>\n");
      out.write(" \t\t<a href=\"#\" onclick=\"addToCart(");
      out.print(product.getProductId() );
      out.write(");\">加入购物车</a>\n");
      out.write("\t</div>\n");
      out.write("\t");
 } 
      out.write("\n");
      out.write("<!-- </table> -->\n");
      out.write("</div>\n");
      out.write("\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, false);
      out.write("\n");
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
